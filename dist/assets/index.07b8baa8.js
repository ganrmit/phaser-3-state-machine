import{P as t}from"./vendor.21f5455c.js";!function(t=".",e="__import__"){try{self[e]=new Function("u","return import(u)")}catch(s){const r=new URL(t,location),i=t=>{URL.revokeObjectURL(t.src),t.remove()};self[e]=t=>new Promise(((s,a)=>{const o=new URL(t,r);if(self[e].moduleMap[o])return s(self[e].moduleMap[o]);const n=new Blob([`import * as m from '${o}';`,`${e}.moduleMap['${o}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(n),onerror(){a(new Error(`Failed to import: ${t}`)),i(c)},onload(){s(self[e].moduleMap[o]),i(c)}});document.head.appendChild(c)})),self[e].moduleMap={}}}("/assets/");var e={type:t.AUTO,parent:"game",backgroundColor:"#33A5E7",physics:{default:"arcade",arcade:{gravity:{y:300}}},render:{pixelArt:!0},scale:{width:300,height:200,mode:t.Scale.FIT,autoCenter:t.Scale.CENTER_BOTH}};class s extends Phaser.Physics.Arcade.Sprite{static preload(t){t.load.atlas("adventurer","assets/adventurer/adventurer.png","assets/adventurer/adventurer_atlas.json"),t.load.animation("adventurer_anim","assets/adventurer/adventurer_anim.json")}constructor(t,e,s){super(t,e,s,"adventurer"),t.add.existing(this),t.physics.add.existing(this),this.setCollideWorldBounds(),this.setSize(12,36),this.setGravityY(300),this.enterState("idle"),this.cursors=t.input.keyboard.createCursorKeys()}update(t,e){switch(this.cursors.left.isDown?this.setFlipX(!0):this.cursors.right.isDown?this.setFlipX(!1):this.setVelocityX(0),this.state){case"idle":Phaser.Input.Keyboard.JustDown(this.cursors.up)&&this.body.touching.down?(this.setVelocityY(-250),this.enterState("jump")):this.cursors.left.isDown||this.cursors.right.isDown?this.enterState("run"):this.cursors.down.isDown&&this.enterState("crouch");break;case"run":Phaser.Input.Keyboard.JustDown(this.cursors.up)&&this.body.touching.down?(this.setVelocityY(-250),this.enterState("jump")):this.cursors.left.isDown?this.setVelocityX(-160):this.cursors.right.isDown?this.setVelocityX(160):this.enterState("idle");break;case"crouch":this.cursors.down.isDown||this.enterState("idle");break;case"jump":this.cursors.left.isDown?this.setVelocityX(-160):this.cursors.right.isDown&&this.setVelocityX(160),Phaser.Input.Keyboard.JustDown(this.cursors.up)?(this.setVelocityY(-250),this.enterState("doublejump")):this.body.touching.down&&this.enterState("idle");break;case"doublejump":this.cursors.left.isDown?this.setVelocityX(-160):this.cursors.right.isDown&&this.setVelocityX(160),this.body.touching.down&&this.enterState("idle")}}enterState(t){switch(this.state=t,t){case"idle":this.anims.play("idle");break;case"run":this.anims.play("run");break;case"crouch":this.anims.play("crouch");break;case"jump":this.anims.play("jump");break;case"doublejump":this.anims.play("smrslt")}}}class r extends t.Scene{constructor(){super("StateScene")}preload(){s.preload(this)}create(){let t=this.physics.add.staticGroup();t.add(this.add.rectangle(150,200,1e3,20,16711680)),t.add(this.add.rectangle(0,100,20,200,16711680)),this.player=new s(this,100,100),this.physics.add.collider(this.player,t)}update(t,e){this.player.update(t,e)}}new t.Game(Object.assign(e,{scene:[r]}));
